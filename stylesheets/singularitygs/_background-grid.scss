// Write stops for single columns
@function grid-gradient-stop($location, $columns, $gutter, $color) {
  @if $location == 1 {
    @return $color 0%, $color column-span(1, 1, $columns), transparentize($color, 1) column-span(1, 1, $columns);
  }
  @if $location == column-count($columns) {
    @return transparentize($color, 1) column-span($location - 1, 1, $columns) + gutter-span($gutter, $columns), $color column-span($location - 1, 1, $columns) + gutter-span($gutter, $columns), $color 100%;
  }
  @if $location > 1 {
    @return transparentize($color, 1) column-span($location - 1, 1, $columns) + gutter-span($gutter, $columns), $color column-span($location - 1, 1, $columns) + gutter-span($gutter, $columns), $color column-span($location, 1, $columns), transparentize($color, 1) column-span($location, 1, $columns);
  }
}

// Compiling grid stops
@function grid-gradient-stops($columns, $gutter, $color) {
  $list: ();
  @for $i from 1 through column-count($columns) {
    $list: join($list, grid-gradient-stop($i, $columns, $gutter, $color), comma);
  }
  @return $list;
}

// Pull in grid stops to make a background gradient
@mixin background-grid($columns: $columns, $gutter: $gutter, $color: rgba(#69aedb, 0.5)) {
  @if is-compound($columns) {
    $length: length($columns);
    $index: index($columns, 'compound');
    $alpha: 1 / ($length - 1);
    $color: rgba($color, 1);
    $color: rgba($color, $alpha);
    $gradient: ();
    @if $index == 1 {
      @for $i from 2 through $length {
        $gradient: join($gradient, linear-gradient(left, grid-gradient-stops(nth($columns, $i), $gutter, $color)), comma);
      }
      @include background($gradient);
    }
    @if $index == $length {
      @for $i from 1 to $length {
        $gradient: join($gradient, linear-gradient(left, grid-gradient-stops(nth($columns, $i), $gutter, $color)), comma);
      }
      @include background($gradient);
    }
    @else {
      @warn 'Compound declaration must either be the first or last in the list';
    }
  }
  @else {
    @include background(linear-gradient(left, grid-gradient-stops($columns, $gutter, $color)));
  }
}
